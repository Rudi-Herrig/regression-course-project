View(production)
summary(production)
source("~/GitHub/regression-course-project/analysisStart.R", echo=TRUE)
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
summary(production)
# 1281 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
View(bigboy)
View(capital)
View(navig)
View(production)
View(production)
View(navig)
View(production)
View(navig)
navig <- navig[-101,]
View(navig)
View(production)
View(capital)
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
View(production)
View(capital)
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
View(bignav)
summary(bignav)
library(tidyverse)
library(knitr)
library(tinytex)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(out.width = "100%")
summary(df1)
#we likely will want to install some packages
#loading tidyverse package
library(tidyverse)
#dataset
df1 = read.csv("USCensus_1840_county.csv")
df2 = read.csv("USCensusData1840.csv")
df3 = read.csv("USCensusData1840_2.csv")
summary(df1)
summary(df2)
summary(df3)
str(bignav)
View(bignav)
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
summary(production)
# 1280 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
navig <- navig[-101,]
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
str(bignav)
View(bignav)
names(bignav)
names(bignav)
str(bignav)
View(bignav)
bignavconvcols <- bignav[,10:]
bignavconvcols <- bignav[,10:ncol(bignav)]
View(bignavconvcols)
bignavconvcols <- bignav[-1,]
View(bignavconvcols)
bignavconvcols <- bignav[-1,10:ncol(bignav)]
View(bignavconvcols)
View(bignav)
View(bignavconvcols)
View(bignav)
bignavnumconv <- sapply(bignavconvcols, function(x) as.integer(as.numeric(x)), simplify = TRUE)
View(bignavnumconv)
summary(bignavnumconv)
str(bignavnumconv)
bignavnumconv <- lapply(bignavconvcols, function(x) as.integer(as.numeric(x)))
str(bignavnumconv)
View(bignavnumconv)
bignavnumconv <- apply(bignavconvcols, function(x) as.integer(as.numeric(x)))
bignavnumconv <- apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x)))
str(bignavnumconv)
View(bignavnumconv)
bignavnumconv <- as.data.frame(na.omit(bignavnumconv))
View(bignavnumconv)
bigboynav <- as.data.frame(na.omit(sapply(bignav[,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE)))
bigboynav <- as.data.frame(na.omit(sapply(bignav[,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
View(bigboynav)
View(bignavnumconv)
View(bigboynav)
View(bigboynav)
str(bigboynav)
bignav_head <- bignav %>% slice_head()
View(bignav_head)
# ready to split into training and testing data
set.seed(303)
trows <- sample(x=nrow(bigboynav),size=floor(0.75*nrow(bigboynav)),replace=FALSE)
#separate data
train <- bigboynav[trows,]
test <- bigboynav[-trows,]
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
# to check for data structure, `summary(production)` is used
# 1280 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
# There was an extra row in `navig` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
navig <- navig[-101,]
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(out.width = "100%",fig.align='center')
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
str(bignav)
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
bignavnumconv <- apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x)))
# I then remove all rows with NA values
bignavnumconv <- as.data.frame(na.omit(bignavnumconv))
str(bignavnumconv)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
str(bigboynav)
# I wanted to write the cleaned up data frame into a file.
install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
View(bigboynav)
View(bigboy)
View(bignavconvcols)
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
str(bignav)
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[,10:ncol(bignav)]
bignavnumconv[-1,] <- apply(bignavconvcols[-1,], 2, function(x) as.integer(as.numeric(x)))
# I then remove all rows with NA values
bignavnumconv <- as.data.frame(na.omit(bignavnumconv))
str(bignavnumconv)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- bigboynav
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
View(bignavnumconv)
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
str(bignav)
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[,10:ncol(bignav)]
bignavnumconv <- apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x)))
# I then remove all rows with NA values
bignavnumconv <- as.data.frame(na.omit(bignavnumconv))
str(bignavnumconv)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- bigboynav
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
View(bignavnumconv)
bignav <- na.omit(bignav)
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
View(bignavconvcols)
bignavnumconv <- apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x)))
bignavnumconv <- as.data.frame(apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x))))
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
View(bigboynav)
View(bignavconvcols)
View(bignavnumconv)
plot(bignavconvcols)
plot(bignavconvcols$ACX001, bignavconvcols$ADC011)
plot(bignavconvcols$ADC011, bignavconvcols$ACX001)
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001)
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001) %>%
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001) axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable
# I omit all rows with NAs
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
bignavnumconv <- as.data.frame(apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x))))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001)
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
View(bigboy)
View(bignav)
View(bigboy)
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable
# I omit all rows with NAs
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
bignavnumconv <- as.data.frame(apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x))))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001, xaxt = "n", yaxt = "n", xlab = "Capital Invested - Commerce Establishments: Retail stores", ylab = "County Borders Navigable Waterway, 1=YES")
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable
# I omit all rows with NAs
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
bignavnumconv <- as.data.frame(apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x))))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001, xaxt = "n", xlab = "Capital Invested - Commerce Establishments: Retail stores", ylab = "County Borders Navigable Waterway, 1=YES")
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable
# I omit all rows with NAs
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
bignavnumconv <- as.data.frame(apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x))))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001, xaxt = "n", xlab = "Capital Invested - Commerce Establishments: Retail stores", ylab = "County Borders Navigable Waterway, 1=YES")
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
axis(2, at = c(0, 1), labels = c("No", "Yes"))
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable
# I omit all rows with NAs
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
bignavnumconv <- as.data.frame(apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x))))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001, xaxt = "n", yaxt = 'n', xlab = "Capital Invested - Commerce Establishments: Retail stores", ylab = "County Borders Navigable Waterway, 1=YES")
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
axis(2, at = c(0, 1), labels = c("No", "Yes"))
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable
# I omit all rows with NAs
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separatign header row to clean up the data set
bignav_head <- bignav %>% slice_head()
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavconvcols <- bignav[-1,10:ncol(bignav)]
bignavnumconv <- as.data.frame(apply(bignavconvcols, 2, function(x) as.integer(as.numeric(x))))
plot(bignavconvcols$ADC011, bignavconvcols$ACX001, xaxt = "n", yaxt = 'n', xlab = "Capital Invested - Commerce Establishments: Retail stores", ylab = "County Borders Navigable Waterway")
axis(1, at = axTicks(1), labels = formatC(axTicks(1)/1000, format = "f", digits = 0, big.mark = ","))
axis(2, at = c(0, 1), labels = c("No", "Yes"))
View(bignavconvcols)
View(bignav)
colnames(bignav)
colnames(bigboynav)
colnames(bignav)
colnames(bigboynav)
colnames(bignav)
colnames(bigboynav)
View(bignavconvcols)
View(bignavnumconv)
View(bigboynav)
View(bignav)
bignav[-1,10:ncol(bignav)] <- as.data.frame(apply(bignav[-1,10:ncol(bignav)], 2, function(x) as.integer(as.numeric(x))))
bignavnumconv <- as.data.frame(apply(bignav[-1,10:ncol(bignav)], 2, function(x) as.integer(as.numeric(x))))
View(bignavnumconv)
View(bignavconvcols)
View(bignavnumconv)
View(bigboynav)
bignav[-1, 10:ncol(bignav)] <- bigboynav
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bignav[-1, 10:ncol(bignav)] <- bigboynav
if (nrow(bignav[-1, ]) == nrow(bigboynav)) {
# Replace columns from the 10th to the last in `bigboy` with `bigboynav`
bignav[-1, 10:ncol(bignav)] <- bigboynav
} else {
warning("The number of rows does not match.")
}
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
if (nrow(bignav[-1, ]) == nrow(bigboynav)) {
# Replace columns from the 10th to the last in `bigboy` with `bigboynav`
bignav[-1, 10:ncol(bignav)] <- bigboynav
} else {
warning("The number of rows does not match.")
}
colnames(bignav)
colnames(bigboynav)
joiningvariables <- bignav[-1, 1:9]
colnames(bignav) == colnames(bigboynav)
colnames(bignav) == colnames(bigboynav)
joiningvariables <- bignav[-1, 1:9]
colnames(bignav[10:ncol(bignav)]) == colnames(bigboynav)
joiningvariables <- bignav[-1, 1:9]
bigboynav <- cbind(joiningvariables, bigboynav)
View(bigboynav)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- cbind(joiningvariables, bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
write.xlsx(bigboynav, "bigboynav.xlsx")
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- cbind(joiningvariables, bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- cbind(joiningvariables, bigboynav)
bigboynav <- rbind(bignav_head, bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- cbind(joiningvariables, bigboynav)
bigboynav <- rbind(bignav_head, bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
bigboynav[-1,10:ncol(bignav)] <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav[-1,10:ncol(bigboynav)] <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav[-1,10:ncol(bigboynav)] <- as.data.frame(na.omit(sapply(bigboynav[-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
as.integer(bigboynav[-1,10:ncol(bigboynav)]) <- as.data.frame(na.omit(sapply(bigboynav[-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
data.frame(bigboynav[-1,10:ncol(bigboynav)]) <- as.data.frame(na.omit(sapply(bigboynav[-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
bigboynav <- as.data.frame(na.omit(sapply(bigboynav[1:nrow(bigboynav)-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
View(bigboynav)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
bigboynav <- rbind(bigboynav, bignav_head)
bigboynav <- as.data.frame(sapply(bigboynav[1:nrow(bigboynav)-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE))
View(bigboynav)
View(bigboynav)
View(bignav)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
bigboynav <- rbind(bigboynav, bignav_head)
bigboynav <- as.data.frame(sapply(bigboynav[1:nrow(bigboynav)-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE))
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
bigboynav <- as.data.frame(sapply(bigboynav[1:nrow(bigboynav)-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE))
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
bigboynav <- as.data.frame(sapply(bigboynav[1:nrow(bigboynav)-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE))
bigboynav <- as.data.frame(sapply(bigboynav[1:nrow(bigboynav)-1,10:ncol(bigboynav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE))
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
bigboynav <- rbind(bigboynav, bignav_head)
View(bigboynav)
# I remove the header row of the data set and the non-meaningful numerical data columns
# I then apply function to columns' values stored as chr strings to convert to integers
bignavnumconv <- as.data.frame(apply(bignav[-1,10:ncol(bignav)], 2, function(x) as.integer(as.numeric(x))))
View(bignavnumconv)
View(joiningvariables)
colnames(bigboy)
colnames(bignav)
colnames(bignav) <- bignav_head
colnames(bignav)
View(bignav)
View(bigboynav)
View(bignav)
View(bigboynav)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
colnames(bigboynav)
colnames(bigboynav) <- bignav_head
colnames(bigboynav)
View(bigboynav)
# I do the same as the 9 comments/lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
colnames(bigboynav) <- bignav_head
colnames(bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
write.xlsx(bigboynav, "bigboynav.xlsx")
View(bigboy)
# I want to be able to refer to the columns with these names
colnames(bigboy)
colnames(bigboynav)
View(bignav)
View(bignav_head)
# I want to be able to refer to the columns with these names
str(colnames(bigboy))
# I want to be able to refer to the columns with these names
summary(colnames(bigboy))
# I want to be able to refer to the columns with these names
colnames(bigboy)
# I want to be able to refer to the columns with these names
bigboy$colnames(bigboy)
# I want to be able to refer to the columns with these names
bigboy$1:122
# I want to be able to refer to the columns with these names
colnames(bigboynav)
# I want to be able to refer to the columns with these names
colnames(bigboynav)[1]
View(bignav)
View(bigboynav)
View(bignav_head)
q()
