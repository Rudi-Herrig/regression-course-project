# WhiteIlliteracyHead <- popdata_list$Headers %>%
#   select(GISJOIN, STATE, STATEA, STATEICP, COUNTY, COUNTYA, COUNTYICP, ACD001, ACN001,  ACK001, ACY, ACKY, ACZYZ, ACH, ACI, ACL, ACM, AC1, ACE, ACS, ACSW, ACSNW, ACSP, ACSWP, Confederate)
# glimpse(WhiteIlliteracyHead)
# WhiteIlliterate <- list(Headers = WhiteIlliteracyHead, Data = WhiteIlliteracy)
# glimpse(WhiteIlliterate)
WhiteIlliteracy <- bigpopdata %>%
select(-c(1:9)) # removing unnecessary columns
WhiteIlliteracyHead <- bigpopdatahead %>%
select(-c(1:9)) # removing unnecessary columns
WhiteIlliterate <- list(Headers = WhiteIlliteracyHead, Data = WhiteIlliteracy)
if (!dir.exists("figures")) {
dir.create("figures")
}
ACSP <- ggplot(WhiteIlliterate$Data, aes(x=ACSP, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Percentage of Non-White Population", y="White Illiteracy Rate (%)",
title="Impact of Racial Composition on White Illiteracy",
subtitle="Comparison by Civil War Alignment")
ACSP
ggsave("ACSP.png", plot=ACSP)
ACM <- ggplot(WhiteIlliterate$Data, aes(x=ACM, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Newspapers and Periodicals", y="White Illiteracy Rate (%)",
title="Implicating Impact of Newspapers Media Produced on White Illiteracy Rate",
subtitle="Comparison by Civil War Alignment")
ACM
ggsave("ACM.png", plot=ACM)
ACI <- ggplot(WhiteIlliterate$Data, aes(x=ACI, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Students", y="White Illiteracy Rate (%)",
title="Impact of Educational Enrollment on Literacy",
subtitle="Comparison by Civil War Alignment")
ACI
ggsave("ACI.png", plot=ACI)
ACH <- ggplot(WhiteIlliterate$Data, aes(x=ACH, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),  # Colors for Union and Confederate
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Learning Institutions",
y="White Illiteracy Rate (%)",
title="Influence of Educational Institutions on Literacy",
subtitle="Comparison by Civil War Alignment")
ACH
ggsave("ACH.png", plot=ACH)
AC1 <- ggplot(popdata, aes(x=AC1, y=ACKY, color=factor(Confederate))) +
geom_jitter(width=0.2, height=0.2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),  # Colors for Union and Confederate
labels=c("0"="Union", "1"="Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Persons in Learned Professions",
y="White Illiteracy Rate (%)",
title="Civil War Alignment by County",
subtitle="Based on Confederate or Union alignment during the Civil War")
AC1
ggsave("AC1.png", plot=AC1)
Confederate <- ggplot(WhiteIlliterate$Data, aes(x=ACKY, y=Confederate)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
theme_bw()
Confederate
ggsave("Confederate.png", plot=Confederate)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
# Create a new workbook
wb <- createWorkbook()
# Add sheets to the workbook
addWorksheet(wb, "Data")
addWorksheet(wb, "Headers")
# Write data to the respective sheets
writeData(wb, sheet = "Data", WhiteIlliteracy)
writeData(wb, sheet = "Headers", WhiteIlliteracyHead)
# Save the workbook
saveWorkbook(wb, "WhiteIlliterate.xlsx", overwrite = TRUE)
# Repeat the process for the other list
wb_popdata <- createWorkbook()
addWorksheet(wb_popdata, "Data")
addWorksheet(wb_popdata, "Headers")
writeData(wb_popdata, sheet = "Data", popdata_list$Data)
writeData(wb_popdata, sheet = "Headers", popdata_list$Headers)
saveWorkbook(wb_popdata, "popdata.xlsx", overwrite = TRUE)
# ready to split into training and testing data 3:1
set.seed(303)
trows <- sample(x=nrow(WhiteIlliterate$Data),size=floor(0.75*nrow(WhiteIlliterate$Data)),replace=FALSE)
#separate data
train <- WhiteIlliterate$Data[trows,]
test <- WhiteIlliterate$Data[-trows,]
mean(train$ACKY)
model <- glm(ACKY~STATE+ACD001+ACN001+ACK001+ACY+ACZYZ+ACH+ACI+ACL+ACM+AC1+ACE+ACS+ACSW+ACSNW+ACSP+ACSWP+Confederate+ACD001:Confederate+ACN001:Confederate+ACK001:Confederate+ACY:Confederate+ACZYZ:Confederate+ACH:Confederate+ACI:Confederate+ACL:Confederate+ACM:Confederate+AC1:Confederate+ACE:Confederate+ACS:Confederate+ACSW:Confederate+ACSNW:Confederate+ACSP:Confederate+ACSWP:Confederate, data = train, family = "binomial")
View(bigpopdata)
View(bigpopdatahead)
View(bigpop)
View(bigpopdata)
View(bigpopdata)
# WhiteIlliteracy <- popdata_list$Data  %>%
#   select(GISJOIN, STATE, STATEA, STATEICP, COUNTY, COUNTYA, COUNTYICP, ACD001, ACN001,  ACK001, ACY, ACKY, ACZYZ, ACH, ACI, ACL, ACM, AC1, ACE, ACS, ACSW, ACSNW, ACSP, ACSWP, Confederate)
# glimpse(WhiteIlliteracy)
# WhiteIlliteracyHead <- popdata_list$Headers %>%
#   select(GISJOIN, STATE, STATEA, STATEICP, COUNTY, COUNTYA, COUNTYICP, ACD001, ACN001,  ACK001, ACY, ACKY, ACZYZ, ACH, ACI, ACL, ACM, AC1, ACE, ACS, ACSW, ACSNW, ACSP, ACSWP, Confederate)
# glimpse(WhiteIlliteracyHead)
# WhiteIlliterate <- list(Headers = WhiteIlliteracyHead, Data = WhiteIlliteracy)
# glimpse(WhiteIlliterate)
WhiteIlliteracy <- bigpopdata %>%
select(-c(1:2,4,6:9)) # removing unnecessary columns
WhiteIlliteracyHead <- bigpopdatahead %>%
select(-c(1:2,4,6:9)) # removing unnecessary columns
WhiteIlliterate <- list(Headers = WhiteIlliteracyHead, Data = WhiteIlliteracy)
View(WhiteIlliteracy)
str(WhiteIlliteracy)
model <- glm(ACKY~STATE+ACD001+ACN001+ACK001+ACY+ACZYZ+ACH+ACI+ACL+ACM+AC1+ACE+ACS+ACSW+ACSNW+ACSP+ACSWP+Confederate+ACD001:Confederate+ACN001:Confederate+ACK001:Confederate+ACY:Confederate+ACZYZ:Confederate+ACH:Confederate+ACI:Confederate+ACL:Confederate+ACM:Confederate+AC1:Confederate+ACE:Confederate+ACS:Confederate+ACSW:Confederate+ACSNW:Confederate+ACSP:Confederate+ACSWP:Confederate, data = train, family = "binomial")
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
library(ggplot2)
# install.packages("corrr")
library(corrr)
# install.packages("corrplot")
library(corrplot)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(out.width = "60%",fig.align='center')
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
# to check for data structure, `summary(production)` is used
# 1280 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
# There was an extra row in `navig` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
navig <- navig[-101,]
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
# 1280 rows
# ACK001 -
literacy <- read_xlsx("USCensus1840Literacy.xlsx")
# Just like `navig`, there was an extra row in `literacy` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
literacy <- literacy[-101,]
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital) %>% inner_join(literacy)
# bignav is to try to salvage the navigable waterway variable as the response
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
# 1280 rows
# Population data
population <- read_xlsx("USCensus_1840_counties.xlsx")
population <- population[-101,] # removing Alexandria row
# Adding the industry, manufacturing, and navigable waterway data to the population data
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
# to check for data structure, `summary(production)` is used
# 1280 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
# There was an extra row in `navig` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
navig <- navig[-101,]
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
# 1280 rows
# ACK001 -
literacy <- read_xlsx("USCensus1840Literacy.xlsx")
# Just like `navig`, there was an extra row in `literacy` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
literacy <- literacy[-101,]
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital) %>% inner_join(literacy)
# bignav is to try to salvage the navigable waterway variable as the response
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
# bigpop is all our data aggregated
bigpop <- population %>% inner_join(bignav)
# separating header row to further clean up the data set
bigpophead <- bigpop %>% slice_head()
# removing header row
bigpopdata <- bigpop[-1,]
# Converting our data from chr to dbl with as.numeric()
bigpopdata[,10:ncol(bigpopdata)] <- as.data.frame(apply(bigpopdata[,10:ncol(bigpopdata)], 2, function(x) (as.numeric(x))))
# population_head <- population %>% slice_head() # separating header row to further clean up the data set
# popdata <- population[-1,] # removing header row
# Creating new variables
bigpopdata <- bigpopdata %>%
mutate(STATE=as.factor(STATE),
COUNTY=as.factor(COUNTY),
ACZYZ=ACZ/(ACY+ACZ), # ACZYZ is the Percentage of Colored population
ACKY=ACK001/ACY, # ACKY is the Percentage of White Illiteracy
ACH=ACH001+ACH002+ACH003, # ACH is the total number of Learning Institutions
ACI=ACI001+ACI002+ACI003, # ACI is the total number of Students
ACL=ACL001+ACL002, # ACL is Number of Printing and Binding Services
ACM=ACM001+ACM002+ACM003+ACM004, # ACM is Number of Newspapers and Periodicals
AC1=AC1003+AC1004+AC1005+AC1006+AC1007, # AC1 is the total number of Employed persons in Learned Professions Requiring Literacy
ACE=AC3003+ACE001, # ACE is the number of White Deaf, Dumb, and Blind Persons Over 20
ACS=ACS001+ACS002+ACS003, # ACS is Total Persons
ACSW= ACS001, # ACSW is Total White Persons
ACSNW= ACS002+ACS003, # ACSNW is Total Non-White Persons
ACSP=ACSNW/ACS, # ACSP is the percentage of non-white population
ACSWP=ACSW/ACS, # ACSWP is the percentage of white population
Confederate=as.integer(STATE %in% c("Alabama", "Arkansas", "Florida", "Georgia", "Louisiana", "Mississippi", "North Carolina", "South Carolina", "Tennessee", "Texas", "Virginia")))
bigpopdatahead <- bigpophead %>%
mutate(ACD001="Total Population",
ACN001="Total Urban Population",
ACZYZ="Percentage of Colored Population",
ACKY="Percentage of White Illiteracy",
ACH="Total Learning Institutions",
ACI="Total Number of Students",
ACL="Number of Printing and Binding Services",
ACM="Number of Newspapers and Periodicals",
AC1="Total Employed in Learned Professions",
ACE="White Deaf, Dumb, and Blind Persons Over 20",
ACS="Total Persons",
ACSW="Total White Persons",
ACSNW="Total Non-White Persons",
ACSP="Percentage of Non-White Population",
ACSWP="Percentage of White Population",
Confederate="Joined Confederacy and Raised Arms Against The United States = 1")
# bigpopdata <- bigpopdata %>%
#  na.omit() # removing rows with NA values
# Re-adding the header row with new descriptions - but this converted the whole list into 'chr' NO!!!!
# Create a list to keep them together but separate for statistical analyses
bigpopdata_list <- list(Headers = bigpopdatahead, Data = bigpopdata)
# glimpse(popdata_list)
# WhiteIlliteracy <- popdata_list$Data  %>%
#   select(GISJOIN, STATE, STATEA, STATEICP, COUNTY, COUNTYA, COUNTYICP, ACD001, ACN001,  ACK001, ACY, ACKY, ACZYZ, ACH, ACI, ACL, ACM, AC1, ACE, ACS, ACSW, ACSNW, ACSP, ACSWP, Confederate)
# glimpse(WhiteIlliteracy)
# WhiteIlliteracyHead <- popdata_list$Headers %>%
#   select(GISJOIN, STATE, STATEA, STATEICP, COUNTY, COUNTYA, COUNTYICP, ACD001, ACN001,  ACK001, ACY, ACKY, ACZYZ, ACH, ACI, ACL, ACM, AC1, ACE, ACS, ACSW, ACSNW, ACSP, ACSWP, Confederate)
# glimpse(WhiteIlliteracyHead)
# WhiteIlliterate <- list(Headers = WhiteIlliteracyHead, Data = WhiteIlliteracy)
# glimpse(WhiteIlliterate)
WhiteIlliteracy <- bigpopdata %>%
select(-c(1:2,4,6:9)) # removing unnecessary columns
WhiteIlliteracyHead <- bigpopdatahead %>%
select(-c(1:2,4,6:9)) # removing unnecessary columns
WhiteIlliterate <- list(Headers = WhiteIlliteracyHead, Data = WhiteIlliteracy)
str(WhiteIlliteracy)
if (!dir.exists("figures")) {
dir.create("figures")
}
ACSP <- ggplot(WhiteIlliterate$Data, aes(x=ACSP, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Percentage of Non-White Population", y="White Illiteracy Rate (%)",
title="Impact of Racial Composition on White Illiteracy",
subtitle="Comparison by Civil War Alignment")
ACSP
ggsave("ACSP.png", plot=ACSP)
ACM <- ggplot(WhiteIlliterate$Data, aes(x=ACM, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Newspapers and Periodicals", y="White Illiteracy Rate (%)",
title="Implicating Impact of Newspapers Media Produced on White Illiteracy Rate",
subtitle="Comparison by Civil War Alignment")
ACM
ggsave("ACM.png", plot=ACM)
ACI <- ggplot(WhiteIlliterate$Data, aes(x=ACI, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Students", y="White Illiteracy Rate (%)",
title="Impact of Educational Enrollment on Literacy",
subtitle="Comparison by Civil War Alignment")
ACI
ggsave("ACI.png", plot=ACI)
ACH <- ggplot(WhiteIlliterate$Data, aes(x=ACH, y=ACKY, color=factor(Confederate))) +
geom_point(alpha=0.2) +
geom_jitter(height=0.05, size=2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),  # Colors for Union and Confederate
labels=c("Union", "Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Learning Institutions",
y="White Illiteracy Rate (%)",
title="Influence of Educational Institutions on Literacy",
subtitle="Comparison by Civil War Alignment")
ACH
ggsave("ACH.png", plot=ACH)
AC1 <- ggplot(popdata, aes(x=AC1, y=ACKY, color=factor(Confederate))) +
geom_jitter(width=0.2, height=0.2, alpha=0.6) +
scale_color_manual(values=c("0"="blue", "1"="red"),  # Colors for Union and Confederate
labels=c("0"="Union", "1"="Confederate"),
name="Civil War Alignment") +
theme_bw() +
labs(x="Number of Persons in Learned Professions",
y="White Illiteracy Rate (%)",
title="Civil War Alignment by County",
subtitle="Based on Confederate or Union alignment during the Civil War")
AC1
ggsave("AC1.png", plot=AC1)
Confederate <- ggplot(WhiteIlliterate$Data, aes(x=ACKY, y=Confederate)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
theme_bw()
Confederate
ggsave("Confederate.png", plot=Confederate)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
# Create a new workbook
wb <- createWorkbook()
# Add sheets to the workbook
addWorksheet(wb, "Data")
addWorksheet(wb, "Headers")
# Write data to the respective sheets
writeData(wb, sheet = "Data", WhiteIlliteracy)
writeData(wb, sheet = "Headers", WhiteIlliteracyHead)
# Save the workbook
saveWorkbook(wb, "WhiteIlliterate.xlsx", overwrite = TRUE)
# Repeat the process for the other list
wb_popdata <- createWorkbook()
addWorksheet(wb_popdata, "Data")
addWorksheet(wb_popdata, "Headers")
writeData(wb_popdata, sheet = "Data", popdata_list$Data)
writeData(wb_popdata, sheet = "Headers", popdata_list$Headers)
saveWorkbook(wb_popdata, "popdata.xlsx", overwrite = TRUE)
# ready to split into training and testing data 3:1
set.seed(303)
trows <- sample(x=nrow(WhiteIlliterate$Data),size=floor(0.75*nrow(WhiteIlliterate$Data)),replace=FALSE)
#separate data
train <- WhiteIlliterate$Data[trows,]
test <- WhiteIlliterate$Data[-trows,]
mean(train$ACKY)
model <- glm(ACKY~STATE+ACD001+ACN001+ACK001+ACY+ACZYZ+ACH+ACI+ACL+ACM+AC1+ACE+ACS+ACSW+ACSNW+ACSP+ACSWP+Confederate+ACD001:Confederate+ACN001:Confederate+ACK001:Confederate+ACY:Confederate+ACZYZ:Confederate+ACH:Confederate+ACI:Confederate+ACL:Confederate+ACM:Confederate+AC1:Confederate+ACE:Confederate+ACS:Confederate+ACSW:Confederate+ACSNW:Confederate+ACSP:Confederate+ACSWP:Confederate, data = train, family = "binomial")
summary(model)
saveRDS(model, "model.rds")
modelvariables <- train %>%
select(ACKY, ACD001, ACN001, ACK001, ACY, ACZYZ, ACH, ACI, ACL, ACM, AC1, ACE, ACS, ACSW, ACSNW, ACSP, ACSWP, Confederate)
cor_matrix <- cor(modelvariables)
cor_matrix
pairs(modelvariables)
png("corplot72.png", width = 1200, height = 1200)
pairs(modelvariables)
dev.off()
png("corplot.png", width = 1200, height = 1200, res = 108)
pairs(modelvariables)
dev.off()
png("correlation_matrix.png", width = 1200, height = 1200, res=144)
par(mar = c(1, 5, 4, 2) + 0.1)  # Adjust margins to give space for top axis labels
plot(1, type = "n", xlab = "", ylab = "", xlim = c(1, ncol(cor_matrix)), ylim = c(1, nrow(cor_matrix)), xaxt = 'n', yaxt = 'n')
# Adding variable names as axis labels
axis(3, at = 1:ncol(cor_matrix), labels = colnames(cor_matrix), las = 2, cex.axis = 0.7)  # Top axis
axis(2, at = rev(1:nrow(cor_matrix)), labels = rownames(cor_matrix), las = 2, cex.axis = 0.7)
# Add correlation coefficients as text, flipping the matrix vertically
for (i in 1:ncol(cor_matrix)) {
for (j in 1:nrow(cor_matrix)) {
text(i, nrow(cor_matrix) + 1 - j, round(cor_matrix[j, i], 2), cex = 0.8)
}
}
dev.off()
png("cormat2.png", width = 1200, height = 1200, res = 108)
# Generate the correlation plot without colors
corrplot(cor(modelvariables), method = "number", type = "upper",
tl.col = "black", tl.srt = 45,
number.cex = 0.8, # Adjust text size
cl.pos = 'n') # Hide color legend
dev.off()
corrplot(cor(modelvariables), method = "color", type = "upper", tl.col = "black", tl.srt = 45, colorbar=TRUE)
png("cormat.png", width = 1200, height = 1200)
cormat <- cor(modelvariables)
# Generate the correlation plot
corrplot(cormat, method = "color", type = "upper",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", # Add correlation coefficients
col = colorRampPalette(c("#E46726", "white", "#6D9EC1"))(200)) # Custom color palette
dev.off()
png("cormat_hclust.png", width = 1200, height = 1200)
cormat <- cor(modelvariables)
# Generate the correlation plot
corrplot(cormat, method = "color", type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", # Add correlation coefficients
col = colorRampPalette(c("#E46726", "white", "#6D9EC1"))(200)) # Custom color palette
# Generate the correlation plot
corrplot(cormat, method = "color", type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45,
addCoef.col = "black", # Add correlation coefficients
col = colorRampPalette(c("#E46726", "white", "#6D9EC1"))(200)) # Custom color palette
png("colorcorplot.png", width = 1200, height = 1200, res=144)
par(mfrow=c(4, 5), mar=c(2, 2, 2, 1) + 0.1, oma=c(0, 0, 4, 0))
# Loop over numeric columns and create histograms
for (i in 1:ncol(modelvariables)) {
valid_data <- modelvariables[[i]][!is.na(modelvariables[[i]])]
if (length(valid_data) > 0) {
hist(valid_data, main=colnames(modelvariables)[i], xlab=colnames(modelvariables)[i],
col="lightblue", border="darkblue")  # Using light blue fill with dark blue borders
} else {
plot.new()
text(0.5, 0.5, "No data available")
}
}
mtext("Distributions of Predictor Variables: Histograms", side=3, outer=TRUE, line=1, cex=1.5)
#load libraries
library(olsrr)
#define the model
model <- lm(ACK001~.,data=WhiteIlliteracy)
#execute forward stepwise
forward_model <- ols_step_forward_adj_r2(model)
library(knitr)
library(tinytex)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(out.width = "60%",fig.align='center')
#import and wrangle data
houses <- read_csv("housing.csv") %>%
transmute(Price=SalePrice,
YearBuilt,
MonthSold=as.factor(MoSold),
LotArea,
LotType=as.factor(LotConfig),
Frontage=LotFrontage,
GarageArea,
BasementArea=TotalBsmtSF,
FirstArea=`1stFlrSF`,
SecondArea=`2ndFlrSF`,
Heat=as.factor(Heating)) %>%
na.omit()
#review data structure
glimpse(houses)
#load libraries
library(olsrr)
#define the model
model <- lm(Price~.,data=houses)
#execute forward stepwise
forward_model <- ols_step_forward_adj_r2(model)
#review selection steps
forward_model$metrics
#construct data frame
forward_results <- data.frame(vars=seq(0,8,1),
adjR=c(0,forward_model$metrics$adj_r2))
#plot forward stepwise results
ggplot(data=forward_results,
mapping=aes(x=vars,y=adjR)) +
geom_line(color="blue") +
geom_hline(yintercept=max(forward_results$adjR),
color="red",linetype="dashed") +
labs(title="Forward Stepwise Selection",
x="Number of Predictors",
y="Adjusted R-Squared") +
scale_x_continuous(limits=c(0,10),breaks=seq(0,10,1)) +
scale_y_continuous(limits=c(0,0.8),breaks=seq(0,0.8,0.1)) +
theme_bw()
#execute backward stepwise
backward_model <- ols_step_backward_adj_r2(model)
#review selection steps
backward_model$metrics
#construct data frame
backward_results <- data.frame(vars=c(10,9,8),
adjR=c(summary(model)$adj.r.squared,
backward_model$metrics$adj_r2))
#plot backward stepwise results
ggplot(data=backward_results,
mapping=aes(x=vars,y=adjR)) +
geom_line(color="blue") +
geom_hline(yintercept=max(backward_results$adjR),
color="red",linetype="dashed") +
labs(title="Backward Stepwise Selection",
x="Number of Predictors",
y="Adjusted R-Squared") +
scale_x_continuous(limits=c(0,10),breaks=seq(0,10,1)) +
scale_y_continuous(limits=c(0,0.8),breaks=seq(0,0.8,0.1)) +
theme_bw()
#fit the final model
model_final <- lm(Price~.-MonthSold-Frontage,data=houses)
#review summary output
summary(model_final)
#review data structure
glimpse(houses)
#load libraries
library(olsrr)
#define the model
model <- lm(ACK001~.,data=WhiteIlliteracy)
#define the model
model <- glm(ACK001~.,data=WhiteIlliteracy, family = "gaussian")
#execute forward stepwise
forward_model <- ols_step_forward_adj_r2(model)
