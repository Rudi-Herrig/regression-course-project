png("ADC014hist.png")
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in Millions of $USD)", ylab = "Number of Counties", col = "lightblue", xaxt = "n", breaks=60)
axis(1, at = breaks, labels = paste0(breaks/1e6, "M"))
dev.off()
png("ADC014hist2.png")
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in $USD (not millions))", ylab = "Number of Counties", col = "lightblue", breaks=15000, xlim=c(0, 3000), xaxt='n')
axis(1, at = seq(0,3000,100), labels = paste0(seq(0,3000,100)))
dev.off()
png("ADB004hist.png")
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue")
dev.off()
png("ADB004hist2.png")
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue", breaks=1500, xlim=c(0, 1500), xaxt='n')
axis(1, at = seq(0,1500,300), labels = paste0(seq(0,1500,300)))
dev.off()
png("ADB013hist.png")
hist(Flour_Barrels_Manufactured, main = "Flour: barrels manufactured", xlab = "Flour: barrels manufactured", ylab = "Number of Counties", col = "lightblue", breaks=150, xlim=c(0, 50000), xaxt='n')
axis(1, at = seq(0,50000,5000), labels = paste0(seq(0,50000,5000)))
dev.off()
max(Flour_Barrels_Manufactured)
which.max(Flour_Barrels_Manufactured)
bigboynav[774,]
cor(County_Access_Navigable_Waterway, Persons_Employed_Inland_Navigation)
cor(County_Access_Navigable_Waterway, Manufacturing_Establishments_Fisheries)
cor(County_Access_Navigable_Waterway, Forest_Products_Tar_Pitch_Terpentine_Resin)
cor(County_Access_Navigable_Waterway, Flour_Barrels_Manufactured)
cor(modelvariables)
png("predictorsassociation.png")
pairs(modelvariables)
dev.off()
# testing %>% summarize(rmseNull = sqrt(mean((peopleSum-mean(training$peopleSum))^2)))
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
library(ggplot2)
# install.packages("corrr")
library(corrr)
# install.packages("corrplot")
library(corrplot)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(out.width = "100%",fig.align='center')
# I have split our code into chunks to make it easier to see which code does what
# I have also commented the code to make it easier to understand
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
# to check for data structure, `summary(production)` is used
# 1280 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
# There was an extra row in `navig` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
navig <- navig[-101,]
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable as the response
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
# I omit all rows with NAs
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separating header row to further clean up the data set
bignav_head <- bignav %>% slice_head()
# joiningvariables is the data frame for the rows used for joining (i.e. same as bigboy[,1:9])
joiningvariables <- bignav[-1, 1:9]
# I apply as.numeric and as.integer functions to convert columns to integers
# I apply function to convert only the meaningful portion of our data set, without the header row and the non-meaningful (identifying) columns of the data set.
bignavnumconv <- as.data.frame(apply(bignav[-1,10:ncol(bignav)], 2, function(x) as.integer(as.numeric(x))))
# Doing the same as the lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# Visualizing the response variable with some column of capital invested as potential predictor
ggplot(bigboynav, aes(x=ADC011, y=ACX001)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
theme_bw()
# Checking column alignment
# colnames(bignav[10:ncol(bignav)]) == colnames(bigboynav)
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
write.xlsx(bignav, "bignav.xlsx")
descriptors <- t(bignav[1,])
# `descriptors` is equal to `joiningvariables` transposed
# ready to split into training and testing data 3:1
set.seed(303)
trows <- sample(x=nrow(bigboynav),size=floor(0.75*nrow(bigboynav)),replace=FALSE)
#separate data
train <- bigboynav[trows,]
test <- bigboynav[-trows,]
County_Access_Navigable_Waterway <- bigboynav$ACX001
Persons_Employed_Inland_Navigation <- bigboynav$ADD006
Manufacturing_Establishments_Fisheries <- bigboynav$ADC014
Forest_Products_Tar_Pitch_Terpentine_Resin <- bigboynav$ADB004
Flour_Barrels_Manufactured <- bigboynav$ADB013
modelvariables <- bigboynav %>%
select(ACX001, ADD006, ADC014, ADB004, ADB013)
breaks = c(0, 1)
# Visualizing data we're interested in to learn more about relationships among data set
ADD006 <- ggplot(bigboynav, aes(x=Persons_Employed_Inland_Navigation, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
labs(y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADD006
ggsave("ADD006.png", plot=ADD006)
ADC014 <- ggplot(bigboynav, aes(x=Manufacturing_Establishments_Fisheries, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1e6, "M")) +
labs(x = "Manufacturing_Establishments_Fisheries (Capital invested in Millions of $USD)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADC014
ggsave("ADC014.png", plot=ADC014)
ADB004 <- ggplot(bigboynav, aes(x=Forest_Products_Tar_Pitch_Terpentine_Resin, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
labs(x = "Forest_Products_Tar_Pitch_Terpentine_Resin (Number of Barrels produced, 300~400lbs/barrel)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADB004
ggsave("ADB004.png", plot=ADB004)
ADB013 <- ggplot(bigboynav, aes(x=Flour_Barrels_Manufactured, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
labs(x = "Flour_Barrels_Manufactured (Number of Barrels produced, 196lbs/barrel)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADB013
ggsave("ADB013.png", plot=ADB013)
# building logistic regression model using whole dataset
nwmodel <- glm(ACX001~ADD006+ADC014+ADB004+ADB013, data = bigboynav, family = "binomial")
summary(nwmodel)
# building model using train data
nwtmodel <- glm(ACX001~ADD006+ADC014+ADB004+ADB013, data = train, family = "binomial")
summary(nwtmodel)
png("ACX001hist.png")
hist(County_Access_Navigable_Waterway, main = "County Access to Navigable Waterway", xlab = "County Access to Navigable Waterway", ylab = "Number of Counties", breaks=25, col = "lightblue", xaxt = "n")
axis(1, at = c(0, 1), labels = c("No", "Yes"))
dev.off()
summary(Persons_Employed_Inland_Navigation)
which.max(Persons_Employed_Inland_Navigation)
second <- bigboynav[-900,]
which.max(second$ADD006)
bigboynav[713,]
png("ADD006hist.png")
hist(Persons_Employed_Inland_Navigation, main = "Persons Employed in Inland Navigation", xlab = "Persons Employed in Inland Navigation", ylab = "Number of Counties", col = "lightblue")
dev.off()
max(Manufacturing_Establishments_Fisheries)
png("ADC014hist.png")
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in Millions of $USD)", ylab = "Number of Counties", col = "lightblue", xaxt = "n", breaks=60)
axis(1, at = breaks, labels = paste0(breaks/1e6, "M"))
dev.off()
png("ADC014hist2.png")
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in $USD (not millions))", ylab = "Number of Counties", col = "lightblue", breaks=15000, xlim=c(0, 3000), xaxt='n')
axis(1, at = seq(0,3000,100), labels = paste0(seq(0,3000,100)))
dev.off()
png("ADB004hist.png")
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue")
dev.off()
png("ADB004hist2.png")
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue", breaks=1500, xlim=c(0, 1500), xaxt='n')
axis(1, at = seq(0,1500,300), labels = paste0(seq(0,1500,300)))
dev.off()
png("ADB013hist.png")
hist(Flour_Barrels_Manufactured, main = "Flour: barrels manufactured", xlab = "Flour: barrels manufactured", ylab = "Number of Counties", col = "lightblue", breaks=150, xlim=c(0, 50000), xaxt='n')
axis(1, at = seq(0,50000,5000), labels = paste0(seq(0,50000,5000)))
dev.off()
max(Flour_Barrels_Manufactured)
which.max(Flour_Barrels_Manufactured)
bigboynav[774,]
cor(County_Access_Navigable_Waterway, Persons_Employed_Inland_Navigation)
cor(County_Access_Navigable_Waterway, Manufacturing_Establishments_Fisheries)
cor(County_Access_Navigable_Waterway, Forest_Products_Tar_Pitch_Terpentine_Resin)
cor(County_Access_Navigable_Waterway, Flour_Barrels_Manufactured)
cor(modelvariables)
png("predictorsassociation.png")
pairs(modelvariables)
dev.off()
testing %>% summarize(rmseNull = sqrt(mean((peopleSum-mean(training$peopleSum))^2)))
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
library(ggplot2)
# install.packages("corrr")
library(corrr)
# install.packages("corrplot")
library(corrplot)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(out.width = "100%",fig.align='center')
# I have split our code into chunks to make it easier to see which code does what
# I have also commented the code to make it easier to understand
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
# to check for data structure, `summary(production)` is used
# 1280 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
# There was an extra row in `navig` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
navig <- navig[-101,]
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable as the response
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
# I omit all rows with NAs
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separating header row to further clean up the data set
bignav_head <- bignav %>% slice_head()
# joiningvariables is the data frame for the rows used for joining (i.e. same as bigboy[,1:9])
joiningvariables <- bignav[-1, 1:9]
# I apply as.numeric and as.integer functions to convert columns to integers
# I apply function to convert only the meaningful portion of our data set, without the header row and the non-meaningful (identifying) columns of the data set.
bignavnumconv <- as.data.frame(apply(bignav[-1,10:ncol(bignav)], 2, function(x) as.integer(as.numeric(x))))
# Doing the same as the lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# Visualizing the response variable with some column of capital invested as potential predictor
ggplot(bigboynav, aes(x=ADC011, y=ACX001)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
theme_bw()
# Checking column alignment
# colnames(bignav[10:ncol(bignav)]) == colnames(bigboynav)
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
write.xlsx(bigboynav, "bigboynav.xlsx")
write.xlsx(bignav, "bignav.xlsx")
descriptors <- t(bignav[1,])
# `descriptors` is equal to `joiningvariables` transposed
# ready to split into training and testing data 3:1
set.seed(303)
trows <- sample(x=nrow(bigboynav),size=floor(0.75*nrow(bigboynav)),replace=FALSE)
#separate data
train <- bigboynav[trows,]
test <- bigboynav[-trows,]
County_Access_Navigable_Waterway <- bigboynav$ACX001
Persons_Employed_Inland_Navigation <- bigboynav$ADD006
Manufacturing_Establishments_Fisheries <- bigboynav$ADC014
Forest_Products_Tar_Pitch_Terpentine_Resin <- bigboynav$ADB004
Flour_Barrels_Manufactured <- bigboynav$ADB013
modelvariables <- bigboynav %>%
select(ACX001, ADD006, ADC014, ADB004, ADB013)
breaks = c(0, 1)
# Visualizing data we're interested in to learn more about relationships among data set
ADD006 <- ggplot(bigboynav, aes(x=Persons_Employed_Inland_Navigation, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
labs(y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADD006
ggsave("ADD006.png", plot=ADD006)
ADC014 <- ggplot(bigboynav, aes(x=Manufacturing_Establishments_Fisheries, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1e6, "M")) +
labs(x = "Manufacturing_Establishments_Fisheries (Capital invested in Millions of $USD)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADC014
ggsave("ADC014.png", plot=ADC014)
ADB004 <- ggplot(bigboynav, aes(x=Forest_Products_Tar_Pitch_Terpentine_Resin, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
labs(x = "Forest_Products_Tar_Pitch_Terpentine_Resin (Number of Barrels produced, 300~400lbs/barrel)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADB004
ggsave("ADB004.png", plot=ADB004)
ADB013 <- ggplot(bigboynav, aes(x=Flour_Barrels_Manufactured, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
labs(x = "Flour_Barrels_Manufactured (Number of Barrels produced, 196lbs/barrel)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADB013
ggsave("ADB013.png", plot=ADB013)
# building logistic regression model using whole dataset
nwmodel <- glm(ACX001~ADD006+ADC014+ADB004+ADB013, data = bigboynav, family = "binomial")
summary(nwmodel)
# building model using train data
nwtmodel <- glm(ACX001~ADD006+ADC014+ADB004+ADB013, data = train, family = "binomial")
summary(nwtmodel)
png("ACX001hist.png")
hist(County_Access_Navigable_Waterway, main = "County Access to Navigable Waterway", xlab = "County Access to Navigable Waterway", ylab = "Number of Counties", breaks=25, col = "lightblue", xaxt = "n")
axis(1, at = c(0, 1), labels = c("No", "Yes"))
dev.off()
summary(Persons_Employed_Inland_Navigation)
which.max(Persons_Employed_Inland_Navigation)
second <- bigboynav[-900,]
which.max(second$ADD006)
bigboynav[713,]
png("ADD006hist.png")
hist(Persons_Employed_Inland_Navigation, main = "Persons Employed in Inland Navigation", xlab = "Persons Employed in Inland Navigation", ylab = "Number of Counties", col = "lightblue")
dev.off()
max(Manufacturing_Establishments_Fisheries)
png("ADC014hist.png")
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in Millions of $USD)", ylab = "Number of Counties", col = "lightblue", xaxt = "n", breaks=60)
axis(1, at = breaks, labels = paste0(breaks/1e6, "M"))
dev.off()
png("ADC014hist2.png")
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in $USD (not millions))", ylab = "Number of Counties", col = "lightblue", breaks=15000, xlim=c(0, 3000), xaxt='n')
axis(1, at = seq(0,3000,100), labels = paste0(seq(0,3000,100)))
dev.off()
png("ADB004hist.png")
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue")
dev.off()
png("ADB004hist2.png")
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue", breaks=1500, xlim=c(0, 1500), xaxt='n')
axis(1, at = seq(0,1500,300), labels = paste0(seq(0,1500,300)))
dev.off()
png("ADB013hist.png")
hist(Flour_Barrels_Manufactured, main = "Flour: barrels manufactured", xlab = "Flour: barrels manufactured", ylab = "Number of Counties", col = "lightblue", breaks=150, xlim=c(0, 50000), xaxt='n')
axis(1, at = seq(0,50000,5000), labels = paste0(seq(0,50000,5000)))
dev.off()
max(Flour_Barrels_Manufactured)
which.max(Flour_Barrels_Manufactured)
bigboynav[774,]
cor(County_Access_Navigable_Waterway, Persons_Employed_Inland_Navigation)
cor(County_Access_Navigable_Waterway, Manufacturing_Establishments_Fisheries)
cor(County_Access_Navigable_Waterway, Forest_Products_Tar_Pitch_Terpentine_Resin)
cor(County_Access_Navigable_Waterway, Flour_Barrels_Manufactured)
cor(modelvariables)
png("predictorsassociation.png")
pairs(modelvariables)
dev.off()
testing %>% summarize(rmseNull = sqrt(mean((peopleSum-mean(training$peopleSum))^2)))
# testing %>% summarize(rmseNull = sqrt(mean((peopleSum-mean(training$peopleSum))^2)))
```
knit_with_parameters("C:/Users/jorda/OneDrive/Desktop/Spring 2024/STAT 3400/Project/ProjectPaper1.Rmd")
library(knitr)
library(tinytex)
library(readxl)
library(tidyverse)
library(stringr)
library(magrittr)
library(ggplot2)
# install.packages("corrr")
library(corrr)
# install.packages("corrplot")
library(corrplot)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(out.width = "100%",fig.align='center')
# I have split our code into chunks to make it easier to see which code does what
# I have also commented the code to make it easier to understand
# 1280 rows
# ADB - production of industries
# ADE - Men employed in selected industries
production <- read_xlsx("USCensus_1840_county.xlsx")
# to check for data structure, `summary(production)` is used
# 1280 rows
# ACX - County Borders Navigable waterway, 1 if yes
navig <- read_xlsx("USCensusData1840.xlsx")
# There was an extra row in `navig` for D.C.'s county of Alexandria (distinct from Rural County of Alexandria) so I removed it.
navig <- navig[-101,]
# 1280 rows
# ADC - Capital Invested
# ADD - Persons Employed
capital <- read_xlsx("USCensusData1840_2.xlsx")
# bigboy is all the data sets combined
bigboy <- production %>% inner_join(navig) %>% inner_join(capital)
# bignav is to try to salvage the navigable waterway variable as the response
bignav <- navig %>%  inner_join(capital) %>% inner_join(production)
# I omit all rows with NAs
bignav <- na.omit(bignav)
# bignav has 1257 rows (including Header row) after NA rows are removed
# separating header row to further clean up the data set
bignav_head <- bignav %>% slice_head()
# joiningvariables is the data frame for the rows used for joining (i.e. same as bigboy[,1:9])
joiningvariables <- bignav[-1, 1:9]
# I apply as.numeric and as.integer functions to convert columns to integers
# I apply function to convert only the meaningful portion of our data set, without the header row and the non-meaningful (identifying) columns of the data set.
bignavnumconv <- as.data.frame(apply(bignav[-1,10:ncol(bignav)], 2, function(x) as.integer(as.numeric(x))))
# Doing the same as the lines above but in one line
bigboynav <- as.data.frame(na.omit(sapply(bignav[-1,10:ncol(bignav)], function(x) as.integer(as.numeric(x)), simplify = TRUE, USE.NAMES = TRUE)))
# Visualizing the response variable with some column of capital invested as potential predictor
ggplot(bigboynav, aes(x=ADC011, y=ACX001)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
theme_bw()
# Checking column alignment
# colnames(bignav[10:ncol(bignav)]) == colnames(bigboynav)
# adding the omitted columns and header row back into bigboynav
bigboynav <- cbind(joiningvariables, bigboynav)
# I wanted to write the cleaned up data frame into a file.
# install.packages("openxlsx")
library(openxlsx)
# write.xlsx(bigboynav, "bigboynav.xlsx")
# write.xlsx(bignav, "bignav.xlsx")
descriptors <- t(bignav[1,])
# `descriptors` is equal to `joiningvariables` transposed
# ready to split into training and testing data 3:1
set.seed(303)
trows <- sample(x=nrow(bigboynav),size=floor(0.75*nrow(bigboynav)),replace=FALSE)
#separate data
train <- bigboynav[trows,]
test <- bigboynav[-trows,]
County_Access_Navigable_Waterway <- bigboynav$ACX001
Persons_Employed_Inland_Navigation <- bigboynav$ADD006
Manufacturing_Establishments_Fisheries <- bigboynav$ADC014
Forest_Products_Tar_Pitch_Terpentine_Resin <- bigboynav$ADB004
Flour_Barrels_Manufactured <- bigboynav$ADB013
modelvariables <- bigboynav %>%
select(ACX001, ADD006, ADC014, ADB004, ADB013)
breaks = c(0, 1)
# Visualizing data we're interested in to learn more about relationships among data set
ADD006 <- ggplot(bigboynav, aes(x=Persons_Employed_Inland_Navigation, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
labs(y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADD006
# ggsave("ADD006.png", plot=ADD006)
ADC014 <- ggplot(bigboynav, aes(x=Manufacturing_Establishments_Fisheries, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1e6, "M")) +
labs(x = "Manufacturing_Establishments_Fisheries (Capital invested in Millions of $USD)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADC014
# ggsave("ADC014.png", plot=ADC014)
ADB004 <- ggplot(bigboynav, aes(x=Forest_Products_Tar_Pitch_Terpentine_Resin, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
labs(x = "Forest_Products_Tar_Pitch_Terpentine_Resin (Number of Barrels produced, 300~400lbs/barrel)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADB004
# ggsave("ADB004.png", plot=ADB004)
ADB013 <- ggplot(bigboynav, aes(x=Flour_Barrels_Manufactured, y=County_Access_Navigable_Waterway)) +
geom_point() +
geom_jitter(height=0.05,size=2,alpha=0.2) +
scale_y_continuous(breaks = c(0, 1)) +
scale_x_continuous(labels = function(x) paste0(x / 1000, "k")) +
labs(x = "Flour_Barrels_Manufactured (Number of Barrels produced, 196lbs/barrel)", y = "County_Access_Navigable_Waterway (1=Yes)") +
theme_bw()
ADB013
# ggsave("ADB013.png", plot=ADB013)
# building logistic regression model using whole dataset
nwmodel <- glm(ACX001~ADD006+ADC014+ADB004+ADB013, data = bigboynav, family = "binomial")
summary(nwmodel)
# building model using train data
nwtmodel <- glm(ACX001~ADD006+ADC014+ADB004+ADB013, data = train, family = "binomial")
summary(nwtmodel)
hist(County_Access_Navigable_Waterway, main = "County Access to Navigable Waterway", xlab = "County Access to Navigable Waterway", ylab = "Number of Counties", breaks=25, col = "lightblue", xaxt = "n")
axis(1, at = c(0, 1), labels = c("No", "Yes"))
summary(Persons_Employed_Inland_Navigation)
which.max(Persons_Employed_Inland_Navigation)
second <- bigboynav[-900,]
which.max(second$ADD006)
bigboynav[713,]
hist(Persons_Employed_Inland_Navigation, main = "Persons Employed in Inland Navigation", xlab = "Persons Employed in Inland Navigation", ylab = "Number of Counties", col = "lightblue")
max(Manufacturing_Establishments_Fisheries)
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in Millions of $USD)", ylab = "Number of Counties", col = "lightblue", xaxt = "n", breaks=60)
axis(1, at = breaks, labels = paste0(breaks/1e6, "M"))
hist(Manufacturing_Establishments_Fisheries, main = "Manufacturing Establishments: Fisheries", xlab = "Manufacturing Establishments: Fisheries (Capital invested in $USD (not millions))", ylab = "Number of Counties", col = "lightblue", breaks=15000, xlim=c(0, 3000), xaxt='n')
axis(1, at = seq(0,3000,100), labels = paste0(seq(0,3000,100)))
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue")
hist(Forest_Products_Tar_Pitch_Terpentine_Resin, main = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", xlab = "Forest Products: Tar, Pitch, Turpentine and Resin: Barrels Produced", ylab = "Number of Counties", col = "lightblue", breaks=1500, xlim=c(0, 1500), xaxt='n')
axis(1, at = seq(0,1500,300), labels = paste0(seq(0,1500,300)))
hist(Flour_Barrels_Manufactured, main = "Flour: barrels manufactured", xlab = "Flour: barrels manufactured", ylab = "Number of Counties", col = "lightblue", breaks=150, xlim=c(0, 50000), xaxt='n')
axis(1, at = seq(0,50000,5000), labels = paste0(seq(0,50000,5000)))
max(Flour_Barrels_Manufactured)
which.max(Flour_Barrels_Manufactured)
bigboynav[774,]
cor(County_Access_Navigable_Waterway, Persons_Employed_Inland_Navigation)
cor(County_Access_Navigable_Waterway, Manufacturing_Establishments_Fisheries)
cor(County_Access_Navigable_Waterway, Forest_Products_Tar_Pitch_Terpentine_Resin)
cor(County_Access_Navigable_Waterway, Flour_Barrels_Manufactured)
cor(modelvariables)
pairs(modelvariables)
